  🎯 重构目标和约束

  核心原则（强制执行）

  1. 样式100%保持不变 - 所有视觉效果完全保持现有样式
  2. 保留所有Layer组件 - 不修改任何现有Layer组件
  3. 只重构数据流和组件组合 - 专注于组件职责分离
  4. 渐进式迁移 - 确保每一步都不破坏现有功能

  组件架构目标

  @components/domains/
  ├── topic/
  │   ├── TopicSection.tsx      # 首页专题模块（使用现有Layer）
  │   ├── TopicList.tsx         # 专题列表组件（新建）
  │   ├── TopicCard.tsx         # 专题卡片组件（已有，保持不变）
  │   └── index.ts
  ├── photo/
  │   ├── PhotoSection.tsx      # 首页写真模块（使用现有Layer）
  │   ├── PhotoList.tsx         # 写真列表组件（新建）
  │   ├── PhotoCard.tsx         # 写真卡片组件（新建）
  │   └── index.ts
  ├── movie/
  │   ├── MovieSection.tsx      # 影片模块（使用现有Layer）
  │   ├── MovieList.tsx         # 影片列表组件（已有，优化）
  │   ├── MovieCard.tsx         # 影片卡片组件（已有，保持不变）
  │   └── index.ts
  └── shared/
      ├── BaseSection.tsx       # 基础Section组件（新建）
      ├── BaseList.tsx          # 基础List组件（新建）
      └── index.ts

  Layer使用保持不变

  - TopicCard 继续使用：CardHoverLayer + ImageLayer + TopicLayer + VipBadgeLayer + NewBadgeLayer
  - PhotoCard 将使用：CardHoverLayer + ImageLayer + TitleLayer + VipBadgeLayer + NewBadgeLayer + QualityBadgeLayer +
  TextHoverLayer
  - MovieCard 继续使用：MovieLayer（已包含所有必要的Layer组合）
  - MovieListItem (simple变体) 使用：CardHoverLayer + ImageLayer + TitleLayer + 各种BadgeLayer + TextHoverLayer

  🚀 实施步骤

  阶段1：创建基础组件

  - BaseSection - 统一的Section布局组件
  - BaseList - 通用的列表布局组件

  阶段2：创建独立List组件

  - TopicList - 专题专用列表组件
  - PhotoList - 写真专用列表组件
  - MovieList - 优化现有影片列表组件

  阶段3：创建PhotoCard

  - 使用现有Layer组件：ImageLayer + TitleLayer + 各种BadgeLayer + TextHoverLayer
  - 保持与MovieCard相同的视觉风格

  阶段4：重构Section组件

  - TopicSection - 使用TopicList + TopicCard
  - PhotoSection - 使用PhotoList + PhotoCard
  - 保持现有的props接口，确保向后兼容

  阶段5：类型系统优化

  - 修复TopicItem、PhotoItem类型定义
  - 移除不必要的字段继承
  - 确保类型安全和业务语义一致

  你想从哪个阶段开始？我建议按照文件中的实施步骤，从阶段1：创建基础组件开始。这样可以确保我们有稳固的基础，然后再逐步重构各个
  模块。

  你想现在开始创建BaseSection和BaseList基础组件吗？