# 影视资源下载网站后端配置文件
# @author mosctz
# @version 1.0

spring:
  # 应用配置
  application:
    name: KneneBackend

  # 环境配置
  profiles:
    active: database

  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:knene_db}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true"
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:592714407}
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs: 60000ms
      min-evictable-idle-time: 300000ms
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  # Flyway数据库迁移配置
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 1.0.0
    validate-on-migrate: true   # 启用验证模式以检测问题
    clean-disabled: false  # 允许清理操作（开发环境）

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 20
          max-wait: -1
          max-idle: 10
          min-idle: 5

  # 缓存配置
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=30m

  # Elasticsearch配置
  elasticsearch:
    rest:
      uris: ${ES_URIS:http://localhost:9200}
      username: ${ES_USERNAME:}
      password: ${ES_PASSWORD:}
      connection-timeout: 5s
      read-timeout: 30s
    index:
      prefix: knene
      number-of-shards: 3
      number-of-replicas: 1

  # RocketMQ配置
  rocketmq:
    name-server: ${ROCKETMQ_NAME_SERVER:localhost:9876}
    producer:
      group: knene-producer-group
      send-message-timeout: 3000
      retry-times-when-send-failed: 2
    consumer:
      group: knene-consumer-group
      consume-thread-min: 5
      consume-thread-max: 20

  # MinIO配置
  minio:
    endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
    access-key: ${MINIO_ACCESS_KEY:minioadmin}
    secret-key: ${MINIO_SECRET_KEY:minioadmin}
    bucket-name: ${MINIO_BUCKET_NAME:knene-resources}
    secure: ${MINIO_SECURE:false}

  # Jackson配置
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

# MyBatis Plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.knene.infrastructure.persistence.entity
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    multiple-result-sets-enabled: true
    use-column-label: true
    use-generated-keys: false
    auto-mapping-behavior: partial
    default-executor-type: simple
    default-statement-timeout: 30
    default-fetch-size: 100
    safe-row-bounds-enabled: false
    local-cache-scope: session
    jdbc-type-for-null: other
    lazy-load-trigger-methods: equals,clone,hashCode,toString
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      table-underline: true
      insert-strategy: not_null
      update-strategy: not_null
      select-strategy: not_empty
  type-handlers-package: com.knene.infrastructure.persistence.typehandler

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  tomcat:
    uri-encoding: UTF-8
    max-threads: 200
    min-spare-threads: 10

# SpringDoc配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    try-it-out-enabled: true
  info:
    title: 影视资源下载网站API
    description: 影视资源下载网站后端API接口文档
    version: 1.0.0
    contact:
      name: mosctz
      email: author@example.com

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,loggers,threaddump,heapdump
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
        spring.data.repository.invocations: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
        spring.data.repository.invocations: 0.5,0.9,0.95,0.99
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# 日志配置
logging:
  level:
    com.knene: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
    com.baomidou.mybatisplus: ${MYBATIS_LOG_LEVEL:WARN}
    com.alibaba.druid: ${DRUID_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      file-name-pattern: logs/knene-backend.%d{yyyy-MM-dd}.%i.log

# 应用自定义配置
app:
  # JWT配置
  jwt:
    secret: ${JWT_SECRET:mySecretKey}
    expiration: ${JWT_EXPIRATION:86400} # 24小时
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800} # 7天

  # 文件存储配置
  storage:
    local:
      enabled: true
      path: ${STORAGE_PATH:./uploads}
      max-file-size: 100MB
    oss:
      enabled: false
    minio:
      enabled: false

  # 爬虫配置
  crawler:
    enabled: true
    thread-pool-size: 10
    user-agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
    timeout: 30000
    retry-times: 3

  # 限流配置
  rate-limit:
    enabled: true
    default-limit: 100
    window-size: 60s

  # Spring Security配置
  security:
    oauth2:
      enabled: ${OAUTH2_ENABLED:false}
      providers:
        google:
          client-id: ${GOOGLE_CLIENT_ID:}
          client-secret: ${GOOGLE_CLIENT_SECRET:}
        github:
          client-id: ${GITHUB_CLIENT_ID:}
          client-secret: ${GITHUB_CLIENT_SECRET:}
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true

  # 邮件配置
  mail:
    enabled: ${MAIL_ENABLED:false}
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    protocol: smtp
    auth: true
    starttls: true
    from: ${MAIL_FROM:noreply@knene.com}

  # 支付配置
  payment:
    alipay:
      enabled: ${ALIPAY_ENABLED:false}
      app-id: ${ALIPAY_APP_ID:}
      private-key: ${ALIPAY_PRIVATE_KEY:}
      public-key: ${ALIPAY_PUBLIC_KEY:}
      gateway-url: ${ALIPAY_GATEWAY_URL:https://openapi.alipay.com/gateway.do}
    wechat:
      enabled: ${WECHAT_PAY_ENABLED:false}
      app-id: ${WECHAT_APP_ID:}
      mch-id: ${WECHAT_MCH_ID:}
      api-key: ${WECHAT_API_KEY:}
      cert-path: ${WECHAT_CERT_PATH:}

  # 外部API配置
  external:
    tmdb:
      api-key: ${TMDB_API_KEY:}
      base-url: https://api.themoviedb.org/3
      language: zh-CN
    douban:
      enabled: ${DOUBAN_ENABLED:false}
      base-url: https://movie.douban.com
    ga4:
      measurement-id: ${GA4_MEASUREMENT_ID:}
      api-secret: ${GA4_API_SECRET:}
    hotjar:
      site-id: ${HOTJAR_SITE_ID:}

  # 数据库读写分离配置
  datasource:
    read-only:
      enabled: ${DATASOURCE_READ_ONLY_ENABLED:false}
      urls: ${DATASOURCE_READ_ONLY_URLS:}
      username: ${DATASOURCE_READ_ONLY_USERNAME:}
      password: ${DATASOURCE_READ_ONLY_PASSWORD:}

  # Spring Boot Admin配置
  boot:
    admin:
      client:
        enabled: ${SPRING_BOOT_ADMIN_ENABLED:true}
        url: ${SPRING_BOOT_ADMIN_URL:http://localhost:8888}
        instance:
          prefer-ip: true
          service-host-type: ip-address
          name: ${spring.application.name}
          metadata:
            tags:
              environment: ${spring.profiles.active}
              version: ${app.version:1.0.0}

  # 链路追踪配置
  tracing:
    sampling:
      probability: ${TRACING_SAMPLE_RATE:0.1}  # 采样率：10%
    zipkin:
      base-url: ${ZIPKIN_BASE_URL:http://localhost:9411}
      enabled: ${ZIPKIN_ENABLED:true}

  # 消息队列主题配置
  rocketmq:
    topics:
      user-notification: knene-user-notification
      resource-update: knene-resource-update
      download-completed: knene-download-completed
      crawler-task: knene-crawler-task
      system-log: knene-system-log
      payment-event: knene-payment-event
      recommendation-update: knene-recommendation-update